// Circle Drawing based of http://www.geeks3d.com/20130705/shader-library-circle-disc-fake-sphere-in-glsl-opengl-glslhacker/3/
#if __VERSION__ >= 130

in vec2 texCoord;
out vec4 gl_FragColor;

#else

varying vec2 texCoord;

#endif

uniform vec4 disc_color; // vec4(1.0, 1.0, 1.0, 1.0)
uniform mat3 projection;

void main()
{
    vec2 uv = texCoord;
    uv -= vec2(0.5f, 0.5f);

    vec2 lightPos = vec2(-projection[0].z/2.0, -projection[1].z/2.0);
    vec2 distLightPos = uv - lightPos/1.1;

    vec4 colorLim = 0.5*(vec4(1.0)-disc_color) +0.5* disc_color;
    vec4 useColor = vec4(disc_color.rgb+ colorLim.rgb*(0.5-1.5*dot(distLightPos,distLightPos)),disc_color.a);
    vec4 bkg_color = vec4(useColor.r, useColor.g, useColor.b, 0.0f);

    //GLSL 1.20 does not contain smoothstep, this line is equivalent
    float clampScale = 0.003f/(projection[0].x+projection[1].y);
    float t = clamp((sqrt(dot(uv, uv))-0.5f*(1.0+clampScale))/-clampScale,0.0f,1.0f);
    t = t*t*(3-2*t);
    gl_FragColor = mix(bkg_color, useColor, t);

}